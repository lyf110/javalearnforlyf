一, SpringMVC概述:
	Web层的一个框架,基于MVC模型.
	
	作用: 
		1.参数绑定(获得请求参数)
		2.调用业务
		3.响应
		
		
二, SpringMVC入门
	1.创建Maven工程(war), 导入坐标
	2.创建Controller类, 定义方法, 添加注解
	3.创建springmvc.xml(开启包扫描, 注册视图解析器,开启注解驱动)
	4.配置web.xml(前端控制器,编码过滤器)
	
	
三, @RequestMapping(value/path = "/add", method = {RequestMethod.POST,RequestMethod.GET},)

四, 参数绑定(获得请求参数)
	1.字符串和基本类型
		控制器里面的方法的形参必须和请求参数的key一致
	2. pojo类型
		请求参数的key要和控制器里面的方法的形参(pojo对象)属性一致
	3. pojo包含List和Map
		pojo的  list属性名[下标].属性名
		pojo的  map属性名[key].属性名
	4. post乱码处理
		 <!--配置编码的过滤器(Spring提供的)-->
		<filter>
			<filter-name>CharacterEncodingFilter</filter-name>
			<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>utf-8</param-value>
			</init-param>
		</filter>
		<filter-mapping>
			<filter-name>CharacterEncodingFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>	
	
	5. 自定义类型转换器  String---Date
		 * 1.定义一个类，实现 Converter 接口
		 * 2在springmvc.xml里面配置转换器
		 * 3.在驱动注解里面引用
	
	6. 在控制器的方法里面获得web阶段对象
			public String findByPage(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			
五, 常见的注解
	1.@RequestParam(value = "name",required = true,defaulValue="")
	
	2.@RequestBody String requestBody  
		* 直接获得请求体的内容
		* 请求参数(json类型)转成java对象(pojo,map...)
	
	3.@PathVariable(value="id")  RestFul 风格路径
	

	
